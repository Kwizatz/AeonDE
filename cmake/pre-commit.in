#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

YEAR=`date +"%Y"`
FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(c|cpp|h|hpp)$"`
PYTHON_FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(py)$"`
PROTO_FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(proto)$"`

EXIT_CODE=0
for FILE in $FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

for FILE in $PYTHON_FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

for FILE in $PROTO_FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

for FILE in $FILES; do
	${CLANG_FORMAT_EXECUTABLE} -i $FILE
	if [ $? -ne 0 ]; then
		echo "[!] Formating $FILE failed," >&2
		echo "[!] is clang-format installed?." >&2
		exit 1
	fi
	git add $FILE
done
